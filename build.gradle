plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.google.protobuf' version '0.9.3' // protobuf 플러그인 추가
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', '2023.0.3')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'com.googlecode.json-simple:json-simple:1.1'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// JSON 역직렬화
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// eureka client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// gRPC 관련 의존성 추가
	implementation 'io.grpc:grpc-netty:1.56.0'
	implementation 'io.grpc:grpc-protobuf:1.56.0'
	implementation 'io.grpc:grpc-stub:1.56.0'
	compileOnly 'javax.annotation:javax.annotation-api:1.3.2' // javax.annotation 지원

    // open feign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'io.github.openfeign:feign-okhttp:13.5'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

	// actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// logstash
	implementation 'net.logstash.logback:logstash-logback-encoder:8.0'

	// prometheus
	implementation 'io.micrometer:micrometer-registry-prometheus'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Protobuf 설정
protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.23.4" // Protobuf 컴파일러
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:1.56.0" // gRPC 플러그인
		}
	}
	generateProtoTasks {
		all().each { task ->
			task.plugins {
				grpc {}
			}
		}
	}
}

sourceSets {
	main {
		java {
			srcDirs += 'build/generated/source/proto/main/grpc'
			srcDirs += 'build/generated/source/proto/main/java'
		}
	}
}